{
  "openapi": "3.0.2",
  "info": {
    "title": "Tsundoku",
    "version": "0.0.1",
    "license": {
      "name": "Mozilla Public License 2.0",
      "url": "https://www.mozilla.org/en-US/MPL/2.0/"
    }
  },
  "servers": [
    {
      "url": "http://{host}:{port}/api/v1",
      "variables": {
        "host": {
          "default": "localhost",
          "description": "The location Tsundoku is hosted at."
        },
        "port": {
          "default": "6439",
          "description": "The port that Tsundoku is bound to."
        }
      }
    }
  ],
  "paths": {
    "/shows": {
      "get": {
        "tags": [
          "Shows"
        ],
        "description": "Returns all shows that are stored in the database.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Response status code.",
                      "example": "200"
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "$ref": "components.json#/components/schemas/Show"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Shows"
        ],
        "description": "Adds a new show to the database.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "title",
                  "season"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "New show title.",
                    "example": "Attack on Titan"
                  },
                  "desired_format": {
                    "type": "string",
                    "description": "New show desired format.",
                    "example": "{n} - {s00e00}"
                  },
                  "desired_folder": {
                    "type": "string",
                    "description": "New show desired folder.",
                    "example": "/target/{n}/Season {s00}"
                  },
                  "season": {
                    "type": "integer",
                    "description": "New show season.",
                    "example": "1"
                  },
                  "episode_offset": {
                    "type": "integer",
                    "description": "New show episode offset.",
                    "example": "0"
                  },
                  "watch": {
                    "type": "boolean",
                    "description": "Whether or not to watch the new show.",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Response status code.",
                      "example": "200"
                    },
                    "result": {
                      "$ref": "components.json#/components/schemas/Show"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid arguments when creating show.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Response status code.",
                      "example": "400"
                    },
                    "error": {
                      "type": "string",
                      "description": "Response error message.",
                      "example": "Episode offset is not an integer."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shows/{id}": {
      "get": {
        "tags": [
          "Shows"
        ],
        "description": "Returns a show with the specified ID.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Response status code.",
                      "example": "200"
                    },
                    "result": {
                      "$ref": "components.json#/components/schemas/Show"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Show with passed ID not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Response status code.",
                      "example": "404"
                    },
                    "error": {
                      "type": "string",
                      "description": "Response error message.",
                      "example": "Show with passed ID not found."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Shows"
        ],
        "description": "Updates an existing show in the database.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "New show title.",
                    "example": "Attack on Titan"
                  },
                  "desired_format": {
                    "type": "string",
                    "description": "New show desired format.",
                    "example": "{n} - {s00e00}"
                  },
                  "desired_folder": {
                    "type": "string",
                    "description": "New show desired folder.",
                    "example": "/target/{n}/Season {s00}"
                  },
                  "season": {
                    "type": "integer",
                    "description": "New show season.",
                    "example": "1"
                  },
                  "episode_offset": {
                    "type": "integer",
                    "description": "New show episode offset.",
                    "example": "0"
                  },
                  "watch": {
                    "type": "boolean",
                    "description": "Whether or not to watch the new show.",
                    "example": true
                  },
                  "kitsu_id": {
                    "type": "integer",
                    "description": "New Kitsu metadata ID for the show.",
                    "example": 7442
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Response status code.",
                      "example": "200"
                    },
                    "result": {
                      "$ref": "components.json#/components/schemas/Show"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid arguments when updating show.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Response status code.",
                      "example": "400"
                    },
                    "error": {
                      "type": "string",
                      "description": "Response error message.",
                      "example": "Episode offset is not an integer."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Show with passed ID not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Response status code.",
                      "example": "404"
                    },
                    "error": {
                      "type": "string",
                      "description": "Response error message.",
                      "example": "Show with passed ID not found."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Shows"
        ],
        "description": "Deletes a show with a specified ID.",
        "responses": {
          "200": {
            "description": "The deletion request was successfully received.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Response status code.",
                      "example": "200"
                    },
                    "result": {
                      "type": "boolean",
                      "description": "If the deletion request was received.",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}